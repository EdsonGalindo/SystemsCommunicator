//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessageBrokerService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessagePublish", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class MessagePublish : object
    {
        
        private string ErrorMessageField;
        
        private string MessageField;
        
        private bool PublishSuceedField;
        
        private string QueueNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PublishSuceed
        {
            get
            {
                return this.PublishSuceedField;
            }
            set
            {
                this.PublishSuceedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueName
        {
            get
            {
                return this.QueueNameField;
            }
            set
            {
                this.QueueNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageRecover", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class MessageRecover : object
    {
        
        private string ErrorMessageField;
        
        private string MessageField;
        
        private string QueueNameField;
        
        private bool RecoverSuceedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueName
        {
            get
            {
                return this.QueueNameField;
            }
            set
            {
                this.QueueNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecoverSuceed
        {
            get
            {
                return this.RecoverSuceedField;
            }
            set
            {
                this.RecoverSuceedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageBrokerService.IMessageBrokerService")]
    public interface IMessageBrokerService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBrokerService/PublishMessage", ReplyAction="http://tempuri.org/IMessageBrokerService/PublishMessageResponse")]
        System.Threading.Tasks.Task<MessageBrokerService.MessagePublish> PublishMessageAsync(MessageBrokerService.MessagePublish msgPublish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBrokerService/RecoverMessage", ReplyAction="http://tempuri.org/IMessageBrokerService/RecoverMessageResponse")]
        System.Threading.Tasks.Task<MessageBrokerService.MessageRecover> RecoverMessageAsync(MessageBrokerService.MessageRecover msgRecover);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    public interface IMessageBrokerServiceChannel : MessageBrokerService.IMessageBrokerService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    public partial class MessageBrokerServiceClient : System.ServiceModel.ClientBase<MessageBrokerService.IMessageBrokerService>, MessageBrokerService.IMessageBrokerService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MessageBrokerServiceClient() : 
                base(MessageBrokerServiceClient.GetDefaultBinding(), MessageBrokerServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMessageBrokerService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageBrokerServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MessageBrokerServiceClient.GetBindingForEndpoint(endpointConfiguration), MessageBrokerServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageBrokerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MessageBrokerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageBrokerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MessageBrokerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageBrokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MessageBrokerService.MessagePublish> PublishMessageAsync(MessageBrokerService.MessagePublish msgPublish)
        {
            return base.Channel.PublishMessageAsync(msgPublish);
        }
        
        public System.Threading.Tasks.Task<MessageBrokerService.MessageRecover> RecoverMessageAsync(MessageBrokerService.MessageRecover msgRecover)
        {
            return base.Channel.RecoverMessageAsync(msgRecover);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMessageBrokerService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMessageBrokerService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:63668/MessageBrokerService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MessageBrokerServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMessageBrokerService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MessageBrokerServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMessageBrokerService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMessageBrokerService,
        }
    }
}
